pipeline {
    agent any

     pre {
            // 빌드가 시작되기 전에 실행되는 코드
            script {
                // Git의 마지막 커밋 작성자 정보 가져오기
                def Author_ID = sh(script: "git show -s --pretty=%an", returnStdout: true).trim()
                def Author_Name = sh(script: "git show -s --pretty=%ae", returnStdout: true).trim()

                // Mattermost로 메시지 보내기
                mattermostSend (
                    color: 'info',
                    message: "빌드 시작: ${env.JOB_NAME} #${env.BUILD_NUMBER} by ${Author_ID}(${Author_Name})",
                    endpoint: "${env.MM_WEBHOOK}",
                    channel: 'S207-CICD'
                )
            }
        }

    stages {
        stage('test'){
            steps{
                script{
                    dir('./backend/cloudy'){
                        sh 'chmod +x ./gradlew'
                        sh './gradlew test'
                    }

                }

            }
        }


        stage('sonarqube') {
            steps {
                script {

                    withSonarQubeEnv('SonarQube') {

                        dir('./backend/cloudy') {
                            sh 'chmod +x ./gradlew'
                            sh './gradlew sonarqube -Dsonar.projectKey=S10P31S207'
                        }
                    }
                }
            }
        }
        stage('Results') {
            steps {
                // 테스트 결과 수집
                junit '**/test-results/**/*.xml'
            }
        }
    }
    post {
            success {
                script {
                    def Author_ID = sh(script: "git show -s --pretty=%an", returnStdout: true).trim()
                    def Author_Name = sh(script: "git show -s --pretty=%ae", returnStdout: true).trim()
                    mattermostSend (color: 'good',
                    message: "빌드 성공: ${env.JOB_NAME} #${env.BUILD_NUMBER} by ${Author_ID}(${Author_Name})\n(<${env.BUILD_URL}|Result Report)",
                    endpoint: "${env.MM_WEBHOOK}",
                    channel: 'S207-CICD'
                    )
                }
            }
            failure {
                script {
                    def Author_ID = sh(script: "git show -s --pretty=%an", returnStdout: true).trim()
                    def Author_Name = sh(script: "git show -s --pretty=%ae", returnStdout: true).trim()
                    mattermostSend (color: 'danger',
                    message: "빌드 실패: ${env.JOB_NAME} #${env.BUILD_NUMBER} by ${Author_ID}(${Author_Name})\n(<${env.BUILD_URL}|Details>)",
                    endpoint: "${env.MM_WEBHOOK}",
                    channel: 'S207-CICD'
                    )
                }
            }
            unstable {
                script {
                    def Author_ID = sh(script: "git show -s --pretty=%an", returnStdout: true).trim()
                    def Author_Name = sh(script: "git show -s --pretty=%ae", returnStdout: true).trim()
                    mattermostSend (color: 'good',
                    message: "확인 필요: ${env.JOB_NAME} #${env.BUILD_NUMBER} by ${Author_ID}(${Author_Name})\n(<${env.BUILD_URL}|Details>)",
                    endpoint: "${env.MM_WEBHOOK}",
                    channel: 'S207-CICD'
                    )
                }
            }
        }
}
plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.4'
	id 'io.spring.dependency-management' version '1.1.4'
	id "org.sonarqube" version "4.3.1.3277"
}

group = 'com.s207'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	// lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	// swagger(springdoc)
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'


	//repository service
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api:3.1.0"

	runtimeOnly 'com.mysql:mysql-connector-j'


	//deploy by sam and lambda
	implementation 'com.amazonaws.serverless:aws-serverless-java-container-springboot3:2.0.0-M2'
	implementation 'com.amazonaws:aws-lambda-java-events:3.11.4'
	implementation 'com.amazonaws:aws-lambda-java-log4j2:1.5.1'
	implementation platform('software.amazon.awssdk:bom:2.23.12')
	implementation 'software.amazon.awssdk:s3'

}

configurations {
	querydsl.extendsFrom compileClasspath
}

tasks.named('test') {
	useJUnitPlatform()
}

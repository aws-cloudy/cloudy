pipeline {
    agent any
    tools {nodejs "20.12.2"}

    stages {
        stage('startup notification'){
            steps{
                script {
                    // Git의 마지막 커밋 작성자 정보 가져오기
                    def Author_ID = sh(script: "git show -s --pretty=%an", returnStdout: true).trim()
                    def Author_Name = sh(script: "git show -s --pretty=%ae", returnStdout: true).trim()

                    // Mattermost로 메시지 보내기
                    mattermostSend (
                        color: 'info',
                        message: "빌드 시작: ${env.JOB_NAME} #${env.BUILD_NUMBER} by ${Author_ID}(${Author_Name})",
                        endpoint: "${env.MM_WEBHOOK}",
                        channel: 'S207-CICD'
                    )
                }
            }
        }

        stage('build test'){
                    steps{
                        script{
                            dir('./frontend'){
                                sh 'npm install'
                                sh 'npm run build'
                                
                            }

                        }

                    }
                }

        stage('jest test'){
            steps{
                script{
                    dir('./frontend'){
                        sh 'npm run test:ci'

                    }

                }

            }
        }


        stage('sonarqube') {
            steps {
                script {

                    withSonarQubeEnv('SonarQube') {
                        dir('./frontend') {
                            sh 'npm run sonarqube'
                        }
                    }
                }
            }
        }

    }
    post {
            success {
                script {
                    def Author_ID = sh(script: "git show -s --pretty=%an", returnStdout: true).trim()
                    def Author_Name = sh(script: "git show -s --pretty=%ae", returnStdout: true).trim()
                    mattermostSend (color: 'good',
                    message: "빌드 성공: ${env.JOB_NAME} #${env.BUILD_NUMBER} by ${Author_ID}(${Author_Name})\n(<${env.BUILD_URL}|Result Report)",
                    endpoint: "${env.MM_WEBHOOK}",
                    channel: 'S207-CICD'
                    )
                }
            }
            failure {
                script {
                    def Author_ID = sh(script: "git show -s --pretty=%an", returnStdout: true).trim()
                    def Author_Name = sh(script: "git show -s --pretty=%ae", returnStdout: true).trim()
                    mattermostSend (color: 'danger',
                    message: "빌드 실패: ${env.JOB_NAME} #${env.BUILD_NUMBER} by ${Author_ID}(${Author_Name})\n(<${env.BUILD_URL}|Details>)",
                    endpoint: "${env.MM_WEBHOOK}",
                    channel: 'S207-CICD'
                    )
                }
            }
            unstable {
                script {
                    def Author_ID = sh(script: "git show -s --pretty=%an", returnStdout: true).trim()
                    def Author_Name = sh(script: "git show -s --pretty=%ae", returnStdout: true).trim()
                    mattermostSend (color: 'good',
                    message: "확인 필요: ${env.JOB_NAME} #${env.BUILD_NUMBER} by ${Author_ID}(${Author_Name})\n(<${env.BUILD_URL}|Details>)",
                    endpoint: "${env.MM_WEBHOOK}",
                    channel: 'S207-CICD'
                    )
                }
            }
        }
}
